extends: [[spectral:oas, all]]

documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#

functions:
  - assert-http-codes-for-operation
  - count-resource-types
  - is-object-schema
  - is-problem-json-schema

rules:

  # Zalando RESTful API and Event Guidelines

  # MUST provide API audience [219]
  # => https://opensource.zalando.com/restful-api-guidelines/#219

  must-use-api-audience:
    message: '{{error}}'
    description: MUST use api audience [219]
    severity: error
    given: $.info.x-audience.
    then:
      function: pattern
      functionOptions:
          match: '^((component-internal|business-unit-internal|company-internal|external-partner|external-public)|(([a-z][a-z0-9]*)(-[a-z][a-z0-9]+))*)$'


  # MUST use semantic versioning [116]
  # => https://opensource.zalando.com/restful-api-guidelines/#116

  must-use-semantic-versioning:
    message: '{{error}}'
    description: MUST use semantic versioning [116]
    severity: error
    given: $.info.version
    then:
      function: schema
      functionOptions:
        schema:
          type: string
          pattern: '^[0-9]+\.[0-9]+\.[0-9]+(-[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$'


    # MUST not use URI versioning [115]
    # => https://opensource.zalando.com/restful-api-guidelines/#115

  must-not-use-uri-versioning:
    message: Path must not contain versioning
    description: MUST not use URI versioning [115]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#115
    severity: error
    given: $.paths.*~
    then:
      function: pattern
      functionOptions:
        notMatch: /v[0-9]+/


  # MUST provide API identifiers [215]
  # => https://opensource.zalando.com/restful-api-guidelines/#215

  must-use-api-identifier:
    message: '{{error}}'
    description: MUST provide API identifiers [215]
    severity: error
    given: $.info.x-api-id
    then:
      function: schema
      functionOptions:
          schema:
            type: string
            pattern: "^[a-z0-9][a-z0-9-:.]{6,62}[a-z0-9]$"

  # MUST contain API meta information [218]
  # https://opensource.zalando.com/restful-api-guidelines/#218

  must-have-info-description:
    message: Missing `info.description`.
    description: MUST contain API meta information [218]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#218
    severity: error
    given: $.info
    then:
      field: description
      function: truthy

  must-have-info-contact-name:
    message: Missing `info.contact.name`.
    description: MUST contain API meta information [218]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#218
    severity: error
    given: $.info
    then:
      field: contact.name
      function: truthy

  must-have-info-contact-url:
    message: Missing `info.contact.url`.
    description: MUST contain API meta information [218]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#218
    severity: error
    given: $.info
    then:
      field: contact.url
      function: truthy

  info-contact: true
  info-description: true
  oas3-schema: off
  oas3-valid-schema-example: off

  # MUST secure endpoints [104]
  # MUST define and assign permissions (scopes) [105]
  # => https://opensource.zalando.com/restful-api-guidelines/#104
  # => https://opensource.zalando.com/restful-api-guidelines/#105

  must-have-secure-schemes-types:
    description: Must have secure schemes types
    given: $.components.securitySchemes
    severity: error
    then:
      field: type
      function: enumeration
      functionOptions:
        values:
          - http
          - apiKey
          - openIdConnect
          - oauth2

  must-have-secure-scheme:
    description: Must have secure schemes types
    given: $.components.securitySchemes.[?(@.type == 'http')]
    severity: error
    then:
      field: scheme
      function: enumeration
      functionOptions:
        values:
          - basic
          - bearer

  must-have-secure-endpoints:
    message: Missing 'security.BearerAuth'.
    description: MUST secure endpoints [104] & MUST define and assign permissions (scopes) [105]
    severity: error
    given: $.paths.*.*
    then:
      field: security
      function: truthy

  must-have-securityschemes-for-endpoints:
    message: Missing 'securitySchemes'.
    description: MUST secure endpoints [104] & MUST define and assign permissions (scopes) [105]
    severity: error
    given: $.components
    then:
      field: securitySchemes
      function: truthy

  oas2-operation-security-defined: true
  oas3-operation-security-defined: true


  # MUST follow naming convention for permissions (scopes) [225]
  # => https://opensource.zalando.com/restful-api-guidelines/#225

  must-have-naming-convention-for-permissions:
    message: Missing 'security.BearerAuth'.
    description: MUST secure endpoints [104] & MUST define and assign permissions (scopes) [105]
    severity: error
    given: $.paths.*.*.security[*].BearerAuth[*]
    then:
      function: schema
      functionOptions:
        schema:
          type: string
          pattern: "^((((([a-z][a-z0-9]*)(-[a-z][a-z0-9]*))+[.])*(read|write?))?|uid)$"




  must-use-integer-format:
    description: Must use an official integer format
    documentationUrl: https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#data-types
    given: $..[?(@.type == 'integer')]
    severity: error
    then:
      field: format
      function: enumeration
      functionOptions:
        values:
          - int32
          - int64
          - bigint


  must-use-number-format:
    description: Must use an official number format
    documentationUrl: https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md#data-types
    given: $..[?(@.type == 'number')]
    severity: error
    then:
      field: format
      function: enumeration
      functionOptions:
        values:
          - float
          - double
          - decimal


  # MUST define a format for string types

  # MUST use standard data formats [238]
  # MUST use standard formats for date and time properties [169]
  # => https://opensource.zalando.com/restful-api-guidelines/#169

  # MUST define a format for number and integer types [171]
  # => https://opensource.zalando.com/restful-api-guidelines/#169

  # MUST use standard formats for country, language and currency properties [170]
  # => https://opensource.zalando.com/restful-api-guidelines/#170

  must-use-string-format:
    description: Must use an official string format
    given: $..[?(@.type == 'string')]
    severity: error
    then:
      field: format
      function: enumeration
      functionOptions:
        values:
          - byte
          - password
          - email
          - idn-email
          - hostname
          - idn-hostname
          - ipv4
          - ipv6
          - uri
          - uri-reference
          - uri-template
          - iri
          - iri-reference
          - uuid
          - json-pointer
          - relative-json-pointer
          - iso-639
          - bcp47
          - iso-3166
          - iso-4217
          - date
          - date-time
          - time
          - duration
          - period

  must-use-date-format:
    description: Must use an official date-time format
    given:  $..[?(@.type == 'string' && @.format == 'date-time')].example
    severity: error
    then:
      function: pattern
      functionOptions:
          match: "^(19|20)[0-9][0-9][-](0[1-9]|1[012])[-](0[1-9]|[12][0-9]|3[01])$"

  must-use-date-time-format:
    description: Must use an official date-time format
    given: $..[?(@.type == 'string' && @.format == 'date-time')].example
    severity: error
    then:
      function: pattern
      functionOptions:
        match: "^(19|20)[0-9][0-9][-](0[1-9]|1[012])[-](0[1-9]|[12][0-9]|3[01])$"

  must-defined-format:
    description: Must defined official format for type string
    given: $..[?(@.type == 'string' && @.format == 'date-time')].example
    severity: error
    then:
      function: pattern
      functionOptions:
        match: "^(19|20)[0-9][0-9][-](0[1-9]|1[012])[-](0[1-9]|[12][0-9]|3[01])$"


  # SHOULD use standard formats for time duration and interval properties [127]
  # SHOULD use content negotiation, if clients may choose from different resource representations [244]
  # SHOULD only use UUIDs if necessary [144]
  # MUST keep URLs verb-free [141]
  # MUST avoid actions â€” think about resources [138]
  # MUST use domain-specific resource names [142]

  # SHOULD not use /api as base path [135]
  # => https://opensource.zalando.com/restful-api-guidelines/#135

  should-not-use-api-as-base-path:
    message: Path should not start with /api
    description: SHOULD not use /api as base path [135]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#135
    severity: warn
    given: $.paths.*~
    then:
      function: pattern
      functionOptions:
        notMatch: ^/api


  # MUST use URL-friendly resource identifiers [228]

  must-use-url-friendly-resource-identifiers:
    message: '{{error}}'
    description: MUST use URL-friendly resource identifiers
    severity: error
    given: $.servers[*].url[*]
    recommended: true
    then:
      function: schema
      functionOptions:
        schema:
          type: string
          pattern: "^(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})$"


  # MUST use normalized paths without empty path segments and trailing slashes [136]
  # => https://opensource.zalando.com/restful-api-guidelines/#136

  must-use-normalized-paths-without-empty-path-segments:
    message: Empty path segments are not allowed
    description: MUST use normalized paths without empty path segments and trailing slashes [136]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#136
    severity: error
    given: $.paths.*~
    then:
      function: pattern
      functionOptions:
        notMatch: //

  must-use-normalized-paths-without-trailing-slash:
    message: Path with trailing slash is not allowed
    description: MUST use normalized paths without empty path segments and trailing slashes [136]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#136
    severity: error
    given: $.paths.*~
    then:
      function: pattern
      functionOptions:
        notMatch: /$


   # SHOULD limit number of resource types [146]
   # => https://opensource.zalando.com/restful-api-guidelines/#146

  should-limit-number-of-resource-types:
    message: '{{error}}'
    description: SHOULD limit number of resource types [146]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#146
    severity: warn
    given: $.paths
    then:
      function: count-resource-types
      functionOptions:
        max: 8


  # SHOULD limit number of sub-resource levels [147]
  # => https://opensource.zalando.com/restful-api-guidelines/#147

  should-limit-number-of-sub-resource-levels:
    message: Sub-resource levels should by <= 3
    description: SHOULD limit number of sub-resource levels [147]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#147
    severity: warn
    given: $.paths.*~
    then:
      function: pattern
      functionOptions:
        match: ^\/[^\/]*((\/{[^}]*})*\/[^\/]*(\/{[^}]*})*){0,3}\/?$


  # MUST use snake_case (never camelCase) for query parameters [130]
  use-snake-case-for-query-parameters:
    description: |
      MUST use snake_case (never camelCase) for query parameters
    message: '{{property}} use snake_case for query parameters: {{error}}'
    severity: error
    recommended: true
    given: $.paths.*.*.parameters[?(@.in=='query')].name
    then:
      function: pattern
      functionOptions:
        match: "^[a-z0-9]+(?:_[a-z0-9]+)*$"


  # MUST property names must be ASCII snake_case [118]
  # => https://opensource.zalando.com/restful-api-guidelines/#118

  must-use-snake-case-for-property-names:
    message: Property name has to be ASCII snake_case
    description: MUST property names must be ASCII snake_case [118]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#118
    severity: error
    given: $.paths.*.*[responses,requestBody]..content..schema..properties.*~
    then:
      function: pattern
      functionOptions:
        match: ^[a-z_][a-z_0-9]*$


  # REST API Design Guidelines (QMS)

  # SHOULD paths be kebab-case.
  # => https://confluence.doubleslash.de/confluence/x/yzULCQ
  # MUST use kebab-case for path segments [129]

  paths-kebab-case:
    description: |
      SHOULD/MUST paths be kebab-case.
    message: '{{property}} is not kebab-case: {{error}}'
    severity: error
    recommended: true
    given: $.paths[*]~
    then:
      function: pattern
      functionOptions:
        match: "^(\\/{0,1}([a-z][a-z0-9]*)(-[a-z][a-z0-9]+))*(\\/{[a-z][a-z0-9]*\\})?$"

  # MUST

  application-json-response-success:
    description: All success responses MUST be of media type application/json
    severity: error
    given: $.paths..responses[?( @property >= 200 && @property < 300 )].content[*]~
    then:
      function: enumeration
      functionOptions:
        values:
          - application/json


    # MUST always return JSON objects as top-level data structures [110]
    # => https://opensource.zalando.com/restful-api-guidelines/#110

#  must-always-return-json-objects-as-top-level-data-structures:
#    message: 'Top-level data structure must be an object'
#    description: MUST always return JSON objects as top-level data structures [110]
#    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#110
#    severity: error
#    given: $.paths.*.*[responses,requestBody]..content..schema
#    then:
#      function: is-object-schema


  # SHOULD used open-ended list of values (x-extensible-enum) for enumerations [112]
  # => https://opensource.zalando.com/restful-api-guidelines/#112

  should-use-x-extensible-enum:
    message: 'Should use `x-extensible-enum` instead of `enum`'
    description: SHOULD used open-ended list of values (x-extensible-enum) for enumerations [112]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#112
    severity: error
    given: $.[*].x-extensible-enum
    then:
      function: undefined

  # SHOULD declare enum values using UPPER_SNAKE_CASE string [240]
  # => https://opensource.zalando.com/restful-api-guidelines/#240

  should-use-upper-snake-case-string-for-enum-values:
    message: 'SHOULD declare enum values using UPPER_SNAKE_CASE string'
    description: SHOULD declare enum values using UPPER_SNAKE_CASE string [240]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#240
    severity: error
    recommended: true
    given: $..[?(@.type == 'string')].[x-extensible-enum].*
    then:
      function: pattern
      functionOptions:
        match: "^(([A-Z]+)(_[A-Z]+)*)$"

  # SHOULD name date/time properties with _at suffix [235]
  # => https://opensource.zalando.com/restful-api-guidelines/#235

  should-use-name-date-and-time-properties-with-at-suffix:
    message: 'SHOULD name date/time properties with _at suffix'
    description: SHOULD name date/time properties with _at suffix [235]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#235
    severity: error
    recommended: true
    given: $..properties[?((@.format == "date-time" || @.format == "date") && @.type == 'string')].~
    then:
      function: pattern
      functionOptions:
        match: "^(.*[_]at$).*$"

    # SHOULD prefer hyphenated-pascal-case for HTTP header fields [132]
    # => https://opensource.zalando.com/restful-api-guidelines/#132

  should-use-hyphenated-pascal-case-for-header-parameters:
    message: Header parameters should be Hyphenated-Pascal-Case
    description: SHOULD prefer hyphenated-pascal-case for HTTP header fields [132]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#132
    severity: warn
    given: $.paths.*.*.parameters[?(@.in=='header')].name
    then:
      function: pattern
      functionOptions:
        match: ^([A-Z][a-z]*)(-[A-Z0-9][a-z0-9]*)*$


  # MUST use standard HTTP status codes [150]
  # => https://opensource.zalando.com/restful-api-guidelines/#150

  must-use-standard-http-status-codes:
    message: '{{property}} is not a standardized response code'
    description: MUST use standard HTTP status codes [150]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#150
    severity: error
    given: $.paths.*.*.responses.*~
    then:
      function: enumeration
      functionOptions:
        values:
          - '100'
          - '101'
          - '200'
          - '201'
          - '202'
          - '203'
          - '204'
          - '205'
          - '206'
          - '207'
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '400'
          - '401'
          - '402'
          - '403'
          - '404'
          - '405'
          - '406'
          - '407'
          - '408'
          - '409'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '417'
          - '423'
          - '426'
          - '428'
          - '429'
          - '431'
          - '500'
          - '501'
          - '502'
          - '503'
          - '504'
          - '505'
          - '511'
          - default

#  should-use-well-understood-http-status-codes:
#    message: '{{error}}'
#    description: MUST use standard HTTP status codes [150]
#    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#150
#    severity: warn
#    given: $.paths.*
#    then:
#      function: assert-http-codes-for-operation
#      functionOptions:
#        wellUnderstood:
#          # Success Codes
#          '200': [ ALL ]
#          '201': [ POST, PUT ]
#          '202': [ POST, PUT, DELETE, PATCH ]
#          '204': [ PUT, DELETE, PATCH ]
#          '207': [ POST ]
#
#          # Redirection Codes
#          '301': [ ALL ]
#          '303': [ PATCH, POST, PUT, DELETE ]
#          '304': [ GET, HEAD ]


  # MUST specify success and error responses [151]
  # => https://opensource.zalando.com/restful-api-guidelines/#151

  must-specify-default-response:
    message: Operation does not contain a default response
    description: MUST specify success and error responses [151]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#151
    severity: error
    given: $.paths.*.*.responses
    then:
      field: default
      function: truthy

  must-use-problem-json-as-default-response:
    message: Operation must use problem json as default response
    description: MUST specify success and error responses [151]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#151
    severity: error
    given: $.paths.*.*.responses.default
    then:
      field: content.application/problem+json
      function: truthy


  # SHOULD prefer standard media type name application/json [172]
  # => https://opensource.zalando.com/restful-api-guidelines/#172

  should-prefer-standard-media-type-names:
    message: Custom media types should only be used for versioning
    description: SHOULD prefer standard media type name application/json [172]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#172
    severity: warn
    given: $.paths.*.*.responses.*.content.*~
    then:
      function: pattern
      functionOptions:
        match: ^application\/(problem\+)?json$|^[a-zA-Z0-9_]+\/[-+.a-zA-Z0-9_]+;(v|version)=[0-9]+$


  # MUST support problem JSON [176]
  # => https://opensource.zalando.com/restful-api-guidelines/#176

  must-use-problem-json-for-errors:
    message: Error response must be application/problem+json
    description: MUST support problem JSON [176]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#176
    severity: error
    given: $.paths.*.*.responses[?(@property.match(/^(4|5)/))]
    then:
      field: content.application/problem+json
      function: truthy

  must-use-valid-problem-json-schema:
    message: '{{error}}'
    description: MUST support problem JSON [176]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#176
    severity: error
    given: $.paths.*.*.responses.*.content.application/problem+json
    then:
      field: schema
      function: is-problem-json-schema


  # MUST not use null for boolean properties [122]
  # => https://opensource.zalando.com/restful-api-guidelines/#122

  must-not-use-null-for-boolean-properties:
    message: '{{error}}'
    description: MUST not use null for boolean properties [122]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#122
    severity: error
    given: $..properties[?(@.type == 'boolean' && (@.example != '' || @.nullable != '' || @.readOnly != '' || @.writeOnly != ''))]?@[nullable,example,readOnly,writeOnly]
    then:
      function: pattern
      functionOptions:
        match: "^(true|false?)$"

  # MUST use same semantics for null and absent properties [123]
  # => https://opensource.zalando.com/restful-api-guidelines/#123
  # example field !

  # SHOULD not use null for empty arrays [124]
  # => https://opensource.zalando.com/restful-api-guidelines/#124
  should-not-use-null-for-empty-array-values:
    message: '{{error}}'
    description: SHOULD not use null for empty arrays [124]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#124
    severity: error
    given: $..properties[?(@.type == 'array')]
    then:
      field: default
      function: truthy

  # MUST use common field names and semantics [174]
  # => https://opensource.zalando.com/restful-api-guidelines/#174
  must-use-common-field-names-and-semantics-for-field-name-type:
    message: '{{error}}'
    description: MUST use common field names and semantics [174]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#174
    severity: error
    given: $..properties[type]
    then:
      field: type
      function: truthy

  must-use-common-field-names-and-semantics-for-custom-field-names:
    message: '{{error}}'
    description: MUST use common field names and semantics [174]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#174
    severity: error
    given: $..[properties].*~
    then:
      function: pattern
      functionOptions:
        match: "^[a-z0-9]+(?:_[a-z0-9]+)*$"

  must-use-common-field-names-and-semantics-for-id-field:
    message: '{{error}}'
    description: MUST use common field names and semantics [174]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#174
    severity: error
    given: $..*[properties][?(@property== 'id')]?@[example]
    then:
      function: pattern
      functionOptions:
          match: "^[a-z0-9][a-z0-9-:.]{6,62}[a-z0-9]$"

  must-use-common-field-names-and-semantics-for-type-filed-in-id-field:
    message: '{{error}}'
    description: MUST use common field names and semantics [174]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#174
    severity: error
    given: $..*[properties][?(@property == 'id')]?@[type]
    then:
      function: schema
      functionOptions:
          schema:
            type: string
            pattern: "^string$"


  # MUST use the common address fields [249]
  # => https://opensource.zalando.com/restful-api-guidelines/#249

  # Grouping and cardinality of fields in specific data types may vary based on the specific use case
  # (e.g. combining addressee and address fields into a single type when modeling an address label vs distinct addressee and address types when modeling users and their addresses).

  must-use-common-address-fields-for-addressee:
    message: '{{error}}'
    description: MUST use the common address fields [249]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#249
    severity: error
    given: $..*[?(@property == 'properties' && @parentProperty == 'addressee')][?(@property !== "")].~
    then:
      function: enumeration
      functionOptions:
        values:
          - salutation
          - first_name
          - last_name
          - business_name

  must-use-common-address-field-type:
    message: '{{error}}'
    description: MUST use the common address fields [249]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#249
    severity: error
    given: $..*[?(@parentProperty == 'addressee')][?(@property == 'salutation' || @property == 'first_name' || @property == 'last_name' || @property == 'business_name')]
    then:
      field: type
      function: truthy

  must-use-common-address-field-example:
    message: '{{error}}'
    description: MUST use the common address fields [249]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#249
    severity: error
    given: $..*[?(@parentProperty == 'addressee')][?(@property == 'salutation' || @property == 'first_name' || @property == 'last_name' || @property == 'business_name')]
    then:
      field: example
      function: truthy

  must-use-common-address-field-description:
    message: '{{error}}'
    description: MUST use the common address fields [249]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#249
    severity: error
    given: $..*[?(@parentProperty == 'addressee')][?(@property == 'salutation' || @property == 'first_name' || @property == 'last_name' || @property == 'business_name')]
    then:
      field: description
      function: truthy

  must-use-common-address-required-fields-for-addressee:
    message: '{{error}}'
    description: MUST use the common address fields [249]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#249
    severity: error
    given: $..[addressee].required.*
    then:
      function: enumeration
      functionOptions:
        values:
          - last_name
          - first_name

  test:
    message: '{{error}}'
    description: MUST use the common address fields [249]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#249
    severity: error
    given: $..[addressee].required.first_name
    then:
      field: first_name
      function: truthy

  must-use-required-fields-for-address:
    message: '{{error}}'
    description: MUST use the common address fields [249]
    documentationUrl: https://opensource.zalando.com/restful-api-guidelines/#249
    severity: error
    given: $..[address].required[*]
    then:
      function: enumeration
      functionOptions:
        values:
          - city
          - street
          - zip
          - country_code


  # MUST use the common money object [173]

  ## 9. REST Basics - HTTP requests
  # MUST use HTTP methods correctly [148]

  # MUST fulfill common method properties [149]

  # SHOULD consider to design POST and PATCH idempotent [229]

  # SHOULD use secondary key for idempotent POST design [231]

  # MUST define collection format of header and query parameters [154]

  # SHOULD design simple query languages using query parameters [236]

  # SHOULD design complex query languages using JSON [237]

  # MUST document implicit response filtering [226]

  ## 10. REST Basics - HTTP status codes
  # MUST use official HTTP status codes [243]

  # MUST use most specific HTTP status codes [220]

  # MUST use code 207 for batch or bulk requests [152]

  # MUST use code 429 with headers for rate limits [153]

  # MUST not expose stack traces [177]

  ## 11. REST Basics - HTTP headers
  # SHOULD use kebab-case with uppercase separate words for HTTP headers [132]

  # MUST use Content-* headers correctly [178]

  # SHOULD use Location header instead of Content-Location header [180]

  # SHOULD use only the specified proprietary Zalando headers [183]

  # MUST propagate proprietary headers [184]

  # MUST support [233]X-Flow-ID
